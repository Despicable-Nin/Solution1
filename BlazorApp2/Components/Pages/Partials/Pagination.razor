@code {
    [Parameter] public int CurrentPage { get; set; } = 1;
    [Parameter] public int TotalPages { get; set; } = 1;
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private int CurrentPagePlus(int number)
    {
        return CurrentPage + number;
    }

    private async Task ChangePage(int newPage)
    {
        if (newPage < 1 || newPage > TotalPages)
            return;

        CurrentPage = newPage;
        await OnPageChanged.InvokeAsync(newPage);
    }
}

<nav aria-label="Page navigation example">
    <div class="pagination-container">
        <ul class="pagination">
            <li class="page-item">
                <button class="page-link" @onclick="() => ChangePage(1)" disabled="@(CurrentPage <= 1)">
                    <span aria-hidden="true">First</span>
                    <span class="sr-only">First</span>
                </button>
            </li>
            <li class="page-item">
                <button class="page-link" @onclick="() => ChangePage(CurrentPage - 1)" disabled="@(CurrentPage <= 1)">
                    <span aria-hidden="true">Previous</span>
                    <span class="sr-only">Previous</span>
                </button>
            </li>
     @*        @foreach(var i in Enumerable.Range( 1, 3))
            {
                var currentPage = i == 1 ? CurrentPage - 1 : i == 3 ? CurrentPage + 1 : CurrentPage;

                if(currentPage >= TotalPages)
                {
                    currentPage
                }

                <li class="page-item">
                    <button class="page-link" @onclick="() => ChangePage(currentPage)" disabled="@(CurrentPage + i >= TotalPages)">
                        <span aria-hidden="true">@CurrentPagePlus(i)</span>
                        <span class="sr-only">@CurrentPagePlus(i)</span>
                    </button>
                </li>
            } *@
            <li class="page-item">
                <button class="page-link" @onclick="() => ChangePage(CurrentPage + 1)" disabled="@(CurrentPage >= TotalPages)">
                    <span aria-hidden="true">Next</span>
                    <span class="sr-only">Next</span>
                </button>
            </li>
            <li class="page-item">
                <button class="page-link" @onclick="() => ChangePage(TotalPages)" disabled="@(CurrentPage >= TotalPages)">
                    <span aria-hidden="true">Last</span>
                    <span class="sr-only">Last</span>
                </button>
            </li>
        </ul>
        <div class="pagination-info pt-0">
            Page @CurrentPage of @TotalPages
        </div>
    </div>
</nav>

<style>
    .pagination-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .pagination-info {
        margin-top: 10px;
        text-align: right;
    }
</style>
