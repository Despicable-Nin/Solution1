---
title: Clean Architecture with DDD + CQRS + Mediator + GIS Workflow
---
```
mermaid

graph TD

  %% Layers in Clean Architecture
  A[Presentation Layer] -->|API Calls| B[Application Layer]
  B -->|Commands & Queries| C[Domain Layer]
  C -->|Repositories| D[Infrastructure Layer]

  %% Presentation Layer
  subgraph Presentation Layer
    A1[IncidentController]
  end

  %% Application Layer
  subgraph Application Layer
    B1[CreateIncidentCommand] -- Mediator --> B2[CreateIncidentHandler]
    B2 -->|Save Incident| B3[IIncidentRepository]
    B2 -- Publish Event --> B4[IncidentCreatedEvent]
    B4 -- Mediator --> B5[IncidentCreatedEventHandler]
    B5 -- Fetch Address --> B6[GISService]
    B5 -- Update Incident --> B3[IIncidentRepository]
  end

  %% Domain Layer
  subgraph Domain Layer
    C1[Incident Entity]
    C2[IIncidentRepository]
    C3[Domain Events]
    C1 -->|Implements| C2
    C3 -- Raises --> B4
  end

  %% Infrastructure Layer
  subgraph Infrastructure Layer
    D1[IncidentRepository]
    D2[ApplicationDbContext]
    D3[GIS API Integration]
    D1 -->|Save| D2
    D1 -->|Retrieve Address| D2
    D3 -->|Get Lat/Long| B6
  end

  %% External Services
  subgraph External Services
    E1[GIS API]
  end

  %% Connections
  A1 -->|Sends Command| B1
  B3 -->|Persist| D1
  B6 -->|Fetch Lat/Long| D3
  D3 -->|Call API| E1
  E1 -->|Return Coordinates| D3
  D3 -->|Send Coordinates| B6
  B6 -->|Update Incident| B3

  %% Comments
  classDef comment fill:#ffcccc,stroke:#cc0000,stroke-width:2px;
  class A1 comment;
  class B1,B2 comment;
  class C1 comment;
  class D1,D2,D3 comment;

  ```