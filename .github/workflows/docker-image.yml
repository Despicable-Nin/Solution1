name: Docker Compose CI

on:  
  push:    
    branches: [ "master" ]  
  pull_request:    
    branches: [ "master" ]

jobs:  
  build:    
    runs-on: ubuntu-latest    
    steps:    
    # Step 1: Checkout the code    
    - name: Checkout repository      
      uses: actions/checkout@v4
    
    # Step 2: Install Docker Compose    
    - name: Install Docker Compose      
      run: |        
        sudo apt-get update        
        sudo apt-get install docker-compose -y
    
    # Step 3: Set up Docker Buildx (for multi-platform builds, optional)    
    - name: Set up Docker Buildx      
      uses: docker/setup-buildx-action@v2
    
    # Step 4: Log in to Docker Hub (optional, needed only if you're pushing images)    
    # Skip this if you're not pushing to a registry    
    - name: Log in to Docker Hub      
      uses: docker/login-action@v2      
      with:        
        username: ${{ secrets.DOCKER_USERNAME }}  # Add as a GitHub secret        
        password: ${{ secrets.DOCKER_PASSWORD }}  # Add as a GitHub secret
    
    # Step 5: Build the services defined in docker-compose.yml    
    - name: Build and run Docker Compose      
      run: |        
        docker-compose -f docker-compose.yml up --build -d
    
    # Step 6: Wait for services to be healthy (e.g., SQL Server and Blazor app)    
    - name: Wait for SQL Server and BlazorApp to become healthy      
      run: |        
        until [ "`docker inspect -f {{.State.Health.Status}} sqlserver`" == "healthy" ]; do          
          echo "Waiting for SQL Server to become healthy...";          
          sleep 5;        
        done
    
    # Optional: Step 7: Run Tests (if you have any integration/unit tests to validate)    
    # - name: Run tests    
    #   run: dotnet test path_to_your_tests.csproj
    
    # Optional: Step 8: Push the built image (if you want to push to Docker Hub)    
    # - name: Push Docker image    
    #   run: docker-compose push
